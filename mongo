from pymongo import MongoClient
from pymongo.errors import CollectionInvalid

# Connect to the MongoDB server
client = MongoClient('mongodb://localhost:27017/')
db = client['mydatabase']

# Define a JSON Schema
schema = {
    "$jsonSchema": {
        "bsonType": "object",
        "required": ["name", "age"],
        "properties": {
            "name": {
                "bsonType": "string",
                "description": "must be a string and is required"
            },
            "age": {
                "bsonType": "int",
                "minimum": 0,
                "description": "must be an integer and is required"
            }
        }
    }
}

# Create or update a collection to use the schema
collection_name = 'mycollection'
if collection_name in db.list_collection_names():
    # Modify existing collection validator
    db.command({
        "collMod": collection_name,
        "validator": {
            "$jsonSchema": schema
        }
    })
else:
    try:
        db.create_collection(collection_name, validator={'$jsonSchema': schema})
    except CollectionInvalid as e:
        print(f"Error creating collection: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")
